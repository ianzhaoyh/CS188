<h2>Data Structure</h2>

**Stack**







**Queue**





**Priority_Queue**
堆（完全二叉树）：只允许最后一行不为满；且最后一行必须从左向右排序，最后一行元素之间没有间隔
![image-20250312144944071](/Users/ianzhao/Desktop/AI/project_ucb/Data Structure.assets/image-20250312144944071.png)

小根堆
```
    小
   /  \
  大   大
```

大根堆
```
    大
   /  \
  小   小
```

堆的存储利用的是数组，下标之间存在一些联系
![image-20250312145235960](/Users/ianzhao/Desktop/AI/project_ucb/Data Structure.assets/image-20250312145235960.png)

节点下标为i, 左子节点下标为2i+1,右子节点下标为2i+2

基本操作：
上滤（与父节点比较，向上交换，用于插入新元素到堆中）

下滤（根节点向下调整的操作）O(logN)

自定向下建堆（插入法+上滤）

自底向上建堆（从倒数第二排开始对每个父节点进行下滤操作）

==优先队列==
插入队列 ：上滤

弹出最小操作：用小根堆来完成，弹出根节点每次，再将剩余的节点建堆（把最后一个节点拿到根部，在进行下滤操作）